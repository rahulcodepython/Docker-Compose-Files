networks:
    app_network:
        driver: bridge

services:
    db:
        image: postgres

        container_name: courseHunt-db-app

        restart: always

        ports:
            - "5432:5432" # Ensure no other service is running on this port

        environment:
            - POSTGRES_DB=${DB_NAME}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}

        networks:
            - app_network

    adminer:
        image: adminer:4.8.1

        container_name: courseHunt-adminer-app

        restart: always

        ports:
            - "8080:8080"

        networks:
            - app_network

        depends_on:
            - db

    backend:
        image: rahulcodepython/coursehunt-backend
        # build:
        #     context: ./Server
        #     dockerfile: Dockerfile

        container_name: courseHunt-backend-app

        restart: always

        volumes:
            - staticfiles:/app/static

        ports:
            - "8000:8000"

        depends_on:
            - db

        networks:
            - app_network

        command: gunicorn server.wsgi:application --bind 0.0.0.0:8000

    frontend:
        image: rahulcodepython/coursehunt-frontend
        # build:
        #     context: ./Client
        #     dockerfile: Dockerfile

        container_name: courseHunt-frontend-app

        restart: always

        networks:
            - app_network

        ports:
            - "3000:3000"

        command: ["node", "server.js"]

    nginx:
        image: rahulcodepython/coursehunt-nginx
        # build: ./Nginx

        container_name: coursehunt-nginx-app

        ports:
            - 80:80

        networks:
            - app_network

        volumes:
            - staticfiles:/app/static

        depends_on:
            - backend
            - frontend

volumes:
    staticfiles:
